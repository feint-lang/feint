# NOTE: The extra 0 is so that the Nth Fibonacci corresponds to the Nth
#       cache entry.
cache = [0, 0, 1]

fib_if = (n) ->
    if n == 0 ->
        0
    else if n == 1 ->
        1
    else ->
        c = cache.get(n)
        if c === nil -> cache.push(fib_if(n - 2) + fib_if(n - 1))
        else -> c

fib_match = (n) ->
    match n ->
        0 -> 0
        1 -> 1
        : ->
            c = cache.get(n)
            match c ->
                nil -> cache.push(fib_match(n - 2) + fib_match(n - 1))
                :   -> c

# Keep for benchmarking
fib_match_slow = (n) ->
    match n ->
        0 -> 0
        1 -> 1
        : -> fib_match_slow(n - 1) + fib_match_slow(n - 2)

$main = (...) ->
    n = if $args.is_empty() -> 50 else -> Int.new($args.0)
    print(fib_match(n))
