x = 1 + 2
y = 1.0 + 2.0  # Add floats
1E9
1E+9
1.0e-9


s = "a" + "b" + "c"
string_with_embedded_quotes = "\"x y \" z"
string_with_embedded_comment_char = "x # y # z"
multiline_string = "\
a
b
c
"

print($"{multiline_string}")

s =  " a
b

c


  "

print($"{s}")

# TODO:
# print($"{s.trim()}")

x != y
x == y

# TODO:
# list = [1, 2, 3]

# .3  # Syntax error (leading 0 required)
# 3.  # Syntax error (decimal part required)

# TODO:
# Print `n` three times
# 3.times_do((n) -> print(n))

# Anonymous block (new scope)
block_return_val = block ->
    x = 2

print(block_return_val)

# TODO:
# Type = () =>
#     @new = () ->
#         print("Create new instance Type")
#
#     !! = () ->
#         true && false

hello = () ->
    "Python-style docstring for hello function"
    print("hello")
    print("\"hello\"")

hello()

func_with_return_type = () ->
    "abc"

print(func_with_return_type())

loops = () ->
    i = 0

    loop ->
        print(i)
        i += 1
        if i == 10 -> break

    j = 0
    loop j < 10 ->
        j += 1

loops()

jump_out = () ->
    loop ->
        jump exit
    exit: print("exit")

jump_out()

# TODO:
# loop_over_range = () ->
#     # Prints 0, 1, 2, 3, 4
#     loop i <- 0..5 ->
#         print(i)
#
#     # Prints 1, 2, 3, 4, 5
#     loop i <- 1...5 ->
#         print(i)
