# Ported from https://github.com/RustPython/RustPython/blob/main/benches/benchmarks/mandelbrot.py
# (not sure if it's that's the original source).
#
# Python runs this in ~200ms on my laptop. This version runs in ~425ms
# using a release build.
import std.args
import std.system


die = (code, ...) =>
    if $args.length ->
        print_err($args.join(" "))
    system.exit(code)


$main = (...) =>
    "Mandlebrot

    # Args

    - w: Float
      Width

    - h: Float
      Height

    - print: Bool
      Flag indicating whether to print output to terminal

    "
    args = args.parse("mandlebrot", $args, $main.$doc, {
        "args": (
            {"name": "w", "default": 20.0, "type": Float},
            {"name": "h", "default": 10.0, "type": Float},
        ),
        "flags": (
            {"name": "print", "default": true},
        )
    })

    if args.err ->
        die(1)

    if args $$ nil ->
        system.exit(0)

    w = args.get("w") ?? die(1, "Expected width to be a Float")
    h = args.get("h") ?? die(1, "Expected height to be a Float")
    do_print = args.get("print")

    y = 0.0

    loop y < h ->
        x = 0.0

        loop x < w ->
            zr = zi = tr = ti = 0.0
            cr = 2 * x / w - 1.5
            ci = 2 * y / h - 1.0
            i = 0

            loop i < w && tr + ti <= 4 ->
                zi <- 2 * zr * zi + ci
                zr <- tr - ti + cr
                tr <- zr * zr
                ti <- zi * zi
                i += 1

            # NOTE: Using $print instead of print to avoid function call
            #       overhead in this hot loop. Additionally, print
            #       currently always adds a newline.
            if do_print ->
                $print(if tr + ti <= 4 -> "*" else -> ".",)

            x += 1

        if do_print ->
            $print("\n",)

        y += 1
