x = true

if x ->
    print($"x: x = {x}")

y = if true ->
    print("y: yes, true is true")
    1

print($"y: y = {y}")

z = if false ->
    print_err("z: if block should NOT be printed")
    2
else ->
    print("z: else block SHOULD be printed")
    block ->
        3

print($"z: z = {z}")

if 0 > 0 ->
    nil
else ->
    print("start else")
    if 0 > 0 ->
        print_err("inner if (this should NOT be printed)")
    else ->
        print("inner else (SHOULD be printed)")
    print("end else")

if false ->
    nil
else if 1 + 1 == 5 ->
    assert(false, "1 + 1 == 5", true)
else if true ->
    assert(true, "true != true ???", true)
else ->
    nil

# Pattern matching
obj = (1, 2)
pat = @
assert(obj == pat, (obj, pat), true)
pat = (1, @)
assert(obj == pat, (obj, pat), true)
pat = (@, 2)
assert(obj == pat, (obj, pat), true)

# This just demonstrates that if/else suite at the end of the file
# doesn't cause an error.
if false ->
    print_err(nil)
else ->
    nil
