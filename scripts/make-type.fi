import system

# Exit with message
exit = (...) ->
    if $args.length > 0 -> print_err($args.join(" "))
    system.exit(1)

$main = (...) ->
    if $args.length != 1 ->
        exit("make-type requires a single argument: the name of the new type")

    name = $args.0

    singleton_type_name = $"{name.upper()}_TYPE"
    type_name = $"{name}Type"
    obj_name = name

    rule = "-".repeat(80)
    print_err(rule)
    print_err($"Creating new type:\n")
    print_err($"  - singleton type name = {singleton_type_name}")
    print_err($"  - type name =  {type_name}")
    print_err($"  - object name = {obj_name}")
    print_err(rule, "\n\n")

    template_file = File.new("./scripts/type.template")
    if template_file.err ->
        print_err(template_file.err)
        exit()

    template = template_file.text
    if template.err ->
        print_err(template.err)
        exit()

    rule = (...) ->
        count = 72 - 3 - ($args.length)
        count -= $args.map((arg) -> arg.length).sum
        "-".repeat(count)

    output = template.render({
        "singleton_type_name": singleton_type_name,
        "type_name": type_name,
        "type_rule": rule(type_name, "type"),
        "obj_name": name,
        "obj_rule": rule(obj_name, "object"),
    })

    if output.err ->
        print_err(output.err)
        exit()

    print(output)
