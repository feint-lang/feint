# Every program is an expression containing 0 or more expressions.
expr :
    | expr*
    | assignment
    | atom
    | binary_operation
    | block
    | function
    | operation
    | type

assignment :
    | IDENTIFIER "=" expr

atom :
    | bool
    | float
    | int
    | string

bool :
    | "true"
    | "false"

float :
    | FLOAT

int :
    | BIN
    | DECIMAL
    | HEX
    | OCTAL

string:
    | "\"" CHAR* "\""

# TODO: Figure out how to delineate blocks.
block :
    | expr* "\n"

type :
    | TYPE_IDENTIFIER "(" parameter_list? ")" "\n" block

function :
    | IDENTIFIER "(" parameter_list? ")" type_annotation "->" expr

parameter_list :
    | parameter "," parameter_list
    | parameter

parameter :
    | IDENTIFIER type_annotation

type_annotation :
    | ""
    | ":" TYPE_IDENTIFIER

operation :
    | operation_1 "+" operation
    | operation_1 "-" operation
    | operation_1
operation_1 :
    | operand "*" operation_1
    | operand "/" operation_1
    | operand "%" operation_1
    | operand
operand :
    | "(" operation ")"
    | expr

name:
    | IDENTIFIER
    | TYPE_IDENTIFIER
    | TYPE_METHOD_IDENTIFIER

import :
    | import IMPORT_PATH
    | import IMPORT_PATH as IDENTIFIER
    | import from IMPORT_PATH: IMPORTED_IDENTIFIER*

comment :
    | "#" COMMENT_CHARACTER*

CHARACTER : ".*"
COMMENT_CHARACTER : "[^\n]*"

# Identifiers
IDENTIFIER             : "[a-z]|[a-z][a-z0-9_]*[a-z0-9]"
TYPE_IDENTIFIER        : "[A-Z]|[A-Z][A-Za-z0-9]*[A-Za-z0-9]"
TYPE_METHOD_IDENTIFIER : "\$IDENTIFIER"

# Imports
IMPORT_PATH    :
    | IMPORT_SEGMENT "." IMPORT_PATH
    | IDENTIFIER "as" IDENTIFIER
    | IDENTIFIER
IMPORTED_IDENTIFIER :
    | name "," IMPORTED_IDENTIFIER*
    | name "as" name
    | name

# Integers
BIN     : "(+|-)?0b[01]+"
HEX     : "(+|-)?0x[A-Za-z0-9]+"
DECIMAL : "(+|-)?0|[1-9][0-9]*"
OCTAL   : "(+|-)?0o[0-7]+"

# Floating point numbers
# TODO: Add E notation
FLOAT :
    | "DECIMAL\.[0-9]+"
    | "DECIMAL(\.[0-9]+)?(e|E)[+-]?DECIMAL"
