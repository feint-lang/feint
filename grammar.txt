
# Every program is an expression containing 0 or more expressions.
program :
    | expression*

expression :
    | "(" expression ")"
    | assignment
    | atom
    | sum
    | block
    | function
    | operation
    | type

assignment :
    | IDENTIFIER "=" expression

atom :
    | bool
    | float
    | int
    | string
    | name

bool :
    | "true"
    | "false"

float :
    | FLOAT

int :
    | INT_02
    | INT_08
    | INT_10
    | INT_16

string:
    | "\"" CHAR* "\""

# TODO: Figure out how to delineate blocks.
block :
    | BLOCK_START expression+ BLOCK_END

type :
    | TYPE_IDENTIFIER "(" parameter_list? ")" "\n" block

function :
    | IDENTIFIER? "(" parameter_list? ")" type_annotation "->" (expression| "\n" block)

parameter_list :
    | parameter "," parameter_list
    | parameter

parameter :
    | IDENTIFIER type_annotation

type_annotation :
    | ""
    | ":" TYPE_IDENTIFIER

sum :
    | expression ("+" | "-") product
    | product
product :
    | expression ("*" | "/" | "//" | "%") power
    | power
power :
    | expression ("^" power)
    | expression

name:
    | IDENTIFIER
    | TYPE_IDENTIFIER
    | TYPE_METHOD_IDENTIFIER

import :
    | import IMPORT_PATH
    | import IMPORT_PATH as IDENTIFIER
    | import from IMPORT_PATH: IMPORTED_IDENTIFIER*

comment :
    | "#" COMMENT_CHARACTER*

CHARACTER : ".*"
COMMENT_CHARACTER : "[^\n]*"

# Identifiers
IDENTIFIER             : "[a-z]|[a-z][a-z0-9_]*[a-z0-9]"
TYPE_IDENTIFIER        : "[A-Z]|[A-Z][A-Za-z0-9]*[A-Za-z0-9]"
TYPE_METHOD_IDENTIFIER : "\$IDENTIFIER"

# Imports
IMPORT_PATH    :
    | IMPORT_SEGMENT "." IMPORT_PATH
    | IDENTIFIER "as" IDENTIFIER
    | IDENTIFIER
IMPORTED_IDENTIFIER :
    | name "," IMPORTED_IDENTIFIER*
    | name "as" name
    | name

# Numeric character sets allowing for underscores between digits
ZERO    : "0(_?0+)*"
BINARY  : "[0-1](_?[0-1]+)*"
OCTAL   : "[0-7](_?[0-7]+)*"
DECIMAL : "[0-9](_?[0-9]+)*"
NATURAL : "[1-9](_?[0-9]+)*"
HEX     : "[A-Za-z0-9](_?[A-Za-z0-9]+)*"

FLOAT :
    | "{ DECIMAL }\.{ DECIMAL }"
    | "{ DECIMAL }(\.{ DECIMAL })?(e|E)[+-]?{ DECIMAL }"

# Integers
INT_02  : "(+|-)?0b_?{ BINARY }"
INT_08  : "(+|-)?0o_?{ OCTAL }"
INT_10  : "(+|-)?({ ZERO }|{ NATURAL })"
INT_16  : "(+|-)?0x_{ HEX }"
